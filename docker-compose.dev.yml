version: '3.1'
services:
  postgres-db:
    user: root
    image: postgres:12.3
    container_name: postgres-db
    environment:
      - POSTGRES_USER=app
      - POSTGRES_PASSWORD=app
      - POSTGRES_DB=db
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - quarkus

  zookeeper:
    image: strimzi/kafka:0.19.0-kafka-2.5.0
    container_name: leocode-zookeeper
    command: [
        "sh", "-c",
        "bin/zookeeper-server-start.sh config/zookeeper.properties"
    ]
    ports:
      - "2181:2181"
    environment:
      LOG_DIR: /tmp/logs
    networks:
      - quarkus

  kafka:
    image: strimzi/kafka:0.19.0-kafka-2.5.0
    container_name: leocode-kafka
    command: [
        "sh", "-c",
        "bin/kafka-server-start.sh config/server.properties --override listeners=$${KAFKA_LISTENERS} --override advertised.listeners=$${KAFKA_ADVERTISED_LISTENERS} --override zookeeper.connect=$${KAFKA_ZOOKEEPER_CONNECT}"
    ]
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      LOG_DIR: "/tmp/logs"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    networks:
      - quarkus

  backend:
    build: 
      context: ./leocode-backend
      dockerfile: src/main/docker/Dockerfile.jvm
    user: root
    container_name: backend
    volumes:
      - ./projects-in-queue:/projects-in-queue
    environment:
      - QUARKUS_DATASOURCE_JDBC_URL=jdbc:postgresql://postgres-db:5432/db
      - QUARKUS_HTTP_CORS_METHODS=*
      - QUARKUS_HTTP_CORS=true
      - QUARKUS_HTTP_CORS_ORIGINS=*
      - QUARKUS_HTTP_CORS_HEADERS=*
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    depends_on:
      - postgres-db
      - kafka
    ports:
      - "8181:9090"
    networks:
      - quarkus

  testing:
    build: 
      context: ./leocode-backend
      dockerfile: src/main/docker/Dockerfile.jvm
    user: root
    container_name: testing
    volumes:
      - ./projects-in-queue:/projects-in-queue
      - /var/run/docker.sock:/var/run/docker.sock
      - ./project-under-test:/project-under-test
    environment:
      - QUARKUS_DATASOURCE_JDBC_URL=jdbc:postgresql://postgres-db:5432/db
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    depends_on:
      - kafka
      - backend
    ports:
      - "8083:8083"
    networks:
      - quarkus

  frontend:
    command: sh -c "npx ng serve --host 0.0.0.0"
    build: 
      context: frontend
      dockerfile: ./Dockerfile.build
    container_name: leofrontend
    ports:
      - "4200:4200"
    networks:
     - quarkus
    volumes:
      - ./frontend:/home/node/app
      - ./frontend/node_modules:/home/node/app/node_modules

  jenkins:
    image: jenkins/jenkins:lts-jdk11
    ports:
      - "8087:8080"
      - 50000:50000
    volumes:
      - jenkins_home:/var/jenkins_home
      - ./project-under-test:/var/jenkins_home/workspace/
    networks:
      - quarkus

volumes:
  jenkins_home:
    external: true
  postgres-data:

networks:
  quarkus:
    driver: bridge
